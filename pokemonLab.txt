Psuedocode:

ComputerTeam Class:
    Field Variables:
        Pokemon[] pokemons
        Item[] bag

    randomMove Method:
        (80% chance of uniformly random attack with current pokemon, 20% chance of uniformly random item with current pokemon)

PlayerTeam Class:
    Field Variables:
        Pokemon[] pokemons
        Item[] bag

Pokemon Class:
    Field Variables:
        String name

        int poisonedRoundsLeft
        int paralyzeRoundsLeft

        Attack[] attacks
        int health
        int maxHealth

        int level

    Constructor:
        Takes in (name, type, attacks, health, level) and sets the field Variables accordinglya

    useAttack Method (takes in an attack, and the other team's pokemon):
        if this.paralyzeRoundsLeft == 0:
            other team's pokemon health -= attack.damage
            
            if attack.poison:
                poison other team's pokemon

            if attack.paralyze:
                paralyze other team's pokemon
    
    useItem Method (takes in an item from team's bag):
        this.health += healthIncrease
        this.level += levelIncrease

        if health > maxHealth:
            health = maxHealth

        if level > 100:
            level = 100
        
        if item.revive AND this.health == 0:
            health = maxHealth/2

        if item.maxRevive AND this.health == 0:
            health = maxHealth

Item Class:
    Field Variables:
        String name ("Potion", "Super Potion", "Revive", "Max Revive", "Rare Candy", "Pokeball")

        int levelIncrease
        int healthIncrease
        boolean revive
        boolean maxRevive

        boolean pokeball

Attack Class:
    Field Variables:
        int damage

        String name

        int poisonRounds
        int paralyzeRounds
    
Game Class:
    Field Variables:
        boolean isGameOver
        boolean isPlayerTurn

        enum Screen = {Battle, AttackMenu, BagMenu, PokemonMenu}

        Pokemon playerPokemon
        Pokemon compPokemon

    print Method (takes in a screen enum, and a message if any) Method:
        switch(screen enum):
            print the correct screen based on the enum (and a message if any)
    
    setup Method (myTeam and compTeam):
        this.playerPokemon = (ask player to input which pokemon)
        this.compPokemon = random pokemon from comp team

    nextTurn Method (takes in myTeam and compTeam):
        if !isPlayerTurn:
            compTeam.randomMove()

        else: (i.e. isPlayerTurn is true):
            ask player for input whether 
                to attack, 
                use item (and which pokemon to use it on if necessary) 
                    (if they choose to use a pokeball, the game is over), 
                switch pokemon, 
                or run away (game is over)

Main Class:
    Create myTeam
    Create compTeam

    Create myGame

    myGame.setup()

    while(!myGame.isGameOver):
        myGame.nextTurn(myTeam, compTeam)

